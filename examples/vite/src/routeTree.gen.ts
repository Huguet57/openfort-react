/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WalletRouteImport } from './routes/wallet'
import { Route as WagmiRouteImport } from './routes/wagmi'
import { Route as UserRouteImport } from './routes/user'
import { Route as UiRouteImport } from './routes/ui'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WalletUseWalletsRouteImport } from './routes/wallet/useWallets'
import { Route as WagmiUseDisconnectRouteImport } from './routes/wagmi/useDisconnect'
import { Route as WagmiUseBalanceRouteImport } from './routes/wagmi/useBalance'
import { Route as WagmiUseAccountRouteImport } from './routes/wagmi/useAccount'
import { Route as UserUseUserRouteImport } from './routes/user/useUser'
import { Route as UiUseUIRouteImport } from './routes/ui/useUI'
import { Route as AuthUseWalletAuthRouteImport } from './routes/auth/useWalletAuth'
import { Route as AuthUseSignOutRouteImport } from './routes/auth/useSignOut'
import { Route as AuthUseOauthRouteImport } from './routes/auth/useOauth'
import { Route as AuthUseGuestAuthRouteImport } from './routes/auth/useGuestAuth'
import { Route as AuthUseEmailAuthRouteImport } from './routes/auth/useEmailAuth'
import { Route as AuthUseAuthCallbackRouteImport } from './routes/auth/useAuthCallback'

const WalletRoute = WalletRouteImport.update({
  id: '/wallet',
  path: '/wallet',
  getParentRoute: () => rootRouteImport,
} as any)
const WagmiRoute = WagmiRouteImport.update({
  id: '/wagmi',
  path: '/wagmi',
  getParentRoute: () => rootRouteImport,
} as any)
const UserRoute = UserRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => rootRouteImport,
} as any)
const UiRoute = UiRouteImport.update({
  id: '/ui',
  path: '/ui',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WalletUseWalletsRoute = WalletUseWalletsRouteImport.update({
  id: '/useWallets',
  path: '/useWallets',
  getParentRoute: () => WalletRoute,
} as any)
const WagmiUseDisconnectRoute = WagmiUseDisconnectRouteImport.update({
  id: '/useDisconnect',
  path: '/useDisconnect',
  getParentRoute: () => WagmiRoute,
} as any)
const WagmiUseBalanceRoute = WagmiUseBalanceRouteImport.update({
  id: '/useBalance',
  path: '/useBalance',
  getParentRoute: () => WagmiRoute,
} as any)
const WagmiUseAccountRoute = WagmiUseAccountRouteImport.update({
  id: '/useAccount',
  path: '/useAccount',
  getParentRoute: () => WagmiRoute,
} as any)
const UserUseUserRoute = UserUseUserRouteImport.update({
  id: '/useUser',
  path: '/useUser',
  getParentRoute: () => UserRoute,
} as any)
const UiUseUIRoute = UiUseUIRouteImport.update({
  id: '/useUI',
  path: '/useUI',
  getParentRoute: () => UiRoute,
} as any)
const AuthUseWalletAuthRoute = AuthUseWalletAuthRouteImport.update({
  id: '/useWalletAuth',
  path: '/useWalletAuth',
  getParentRoute: () => AuthRoute,
} as any)
const AuthUseSignOutRoute = AuthUseSignOutRouteImport.update({
  id: '/useSignOut',
  path: '/useSignOut',
  getParentRoute: () => AuthRoute,
} as any)
const AuthUseOauthRoute = AuthUseOauthRouteImport.update({
  id: '/useOauth',
  path: '/useOauth',
  getParentRoute: () => AuthRoute,
} as any)
const AuthUseGuestAuthRoute = AuthUseGuestAuthRouteImport.update({
  id: '/useGuestAuth',
  path: '/useGuestAuth',
  getParentRoute: () => AuthRoute,
} as any)
const AuthUseEmailAuthRoute = AuthUseEmailAuthRouteImport.update({
  id: '/useEmailAuth',
  path: '/useEmailAuth',
  getParentRoute: () => AuthRoute,
} as any)
const AuthUseAuthCallbackRoute = AuthUseAuthCallbackRouteImport.update({
  id: '/useAuthCallback',
  path: '/useAuthCallback',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/ui': typeof UiRouteWithChildren
  '/user': typeof UserRouteWithChildren
  '/wagmi': typeof WagmiRouteWithChildren
  '/wallet': typeof WalletRouteWithChildren
  '/auth/useAuthCallback': typeof AuthUseAuthCallbackRoute
  '/auth/useEmailAuth': typeof AuthUseEmailAuthRoute
  '/auth/useGuestAuth': typeof AuthUseGuestAuthRoute
  '/auth/useOauth': typeof AuthUseOauthRoute
  '/auth/useSignOut': typeof AuthUseSignOutRoute
  '/auth/useWalletAuth': typeof AuthUseWalletAuthRoute
  '/ui/useUI': typeof UiUseUIRoute
  '/user/useUser': typeof UserUseUserRoute
  '/wagmi/useAccount': typeof WagmiUseAccountRoute
  '/wagmi/useBalance': typeof WagmiUseBalanceRoute
  '/wagmi/useDisconnect': typeof WagmiUseDisconnectRoute
  '/wallet/useWallets': typeof WalletUseWalletsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/ui': typeof UiRouteWithChildren
  '/user': typeof UserRouteWithChildren
  '/wagmi': typeof WagmiRouteWithChildren
  '/wallet': typeof WalletRouteWithChildren
  '/auth/useAuthCallback': typeof AuthUseAuthCallbackRoute
  '/auth/useEmailAuth': typeof AuthUseEmailAuthRoute
  '/auth/useGuestAuth': typeof AuthUseGuestAuthRoute
  '/auth/useOauth': typeof AuthUseOauthRoute
  '/auth/useSignOut': typeof AuthUseSignOutRoute
  '/auth/useWalletAuth': typeof AuthUseWalletAuthRoute
  '/ui/useUI': typeof UiUseUIRoute
  '/user/useUser': typeof UserUseUserRoute
  '/wagmi/useAccount': typeof WagmiUseAccountRoute
  '/wagmi/useBalance': typeof WagmiUseBalanceRoute
  '/wagmi/useDisconnect': typeof WagmiUseDisconnectRoute
  '/wallet/useWallets': typeof WalletUseWalletsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/ui': typeof UiRouteWithChildren
  '/user': typeof UserRouteWithChildren
  '/wagmi': typeof WagmiRouteWithChildren
  '/wallet': typeof WalletRouteWithChildren
  '/auth/useAuthCallback': typeof AuthUseAuthCallbackRoute
  '/auth/useEmailAuth': typeof AuthUseEmailAuthRoute
  '/auth/useGuestAuth': typeof AuthUseGuestAuthRoute
  '/auth/useOauth': typeof AuthUseOauthRoute
  '/auth/useSignOut': typeof AuthUseSignOutRoute
  '/auth/useWalletAuth': typeof AuthUseWalletAuthRoute
  '/ui/useUI': typeof UiUseUIRoute
  '/user/useUser': typeof UserUseUserRoute
  '/wagmi/useAccount': typeof WagmiUseAccountRoute
  '/wagmi/useBalance': typeof WagmiUseBalanceRoute
  '/wagmi/useDisconnect': typeof WagmiUseDisconnectRoute
  '/wallet/useWallets': typeof WalletUseWalletsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/ui'
    | '/user'
    | '/wagmi'
    | '/wallet'
    | '/auth/useAuthCallback'
    | '/auth/useEmailAuth'
    | '/auth/useGuestAuth'
    | '/auth/useOauth'
    | '/auth/useSignOut'
    | '/auth/useWalletAuth'
    | '/ui/useUI'
    | '/user/useUser'
    | '/wagmi/useAccount'
    | '/wagmi/useBalance'
    | '/wagmi/useDisconnect'
    | '/wallet/useWallets'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/ui'
    | '/user'
    | '/wagmi'
    | '/wallet'
    | '/auth/useAuthCallback'
    | '/auth/useEmailAuth'
    | '/auth/useGuestAuth'
    | '/auth/useOauth'
    | '/auth/useSignOut'
    | '/auth/useWalletAuth'
    | '/ui/useUI'
    | '/user/useUser'
    | '/wagmi/useAccount'
    | '/wagmi/useBalance'
    | '/wagmi/useDisconnect'
    | '/wallet/useWallets'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/ui'
    | '/user'
    | '/wagmi'
    | '/wallet'
    | '/auth/useAuthCallback'
    | '/auth/useEmailAuth'
    | '/auth/useGuestAuth'
    | '/auth/useOauth'
    | '/auth/useSignOut'
    | '/auth/useWalletAuth'
    | '/ui/useUI'
    | '/user/useUser'
    | '/wagmi/useAccount'
    | '/wagmi/useBalance'
    | '/wagmi/useDisconnect'
    | '/wallet/useWallets'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  UiRoute: typeof UiRouteWithChildren
  UserRoute: typeof UserRouteWithChildren
  WagmiRoute: typeof WagmiRouteWithChildren
  WalletRoute: typeof WalletRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/wallet': {
      id: '/wallet'
      path: '/wallet'
      fullPath: '/wallet'
      preLoaderRoute: typeof WalletRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wagmi': {
      id: '/wagmi'
      path: '/wagmi'
      fullPath: '/wagmi'
      preLoaderRoute: typeof WagmiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ui': {
      id: '/ui'
      path: '/ui'
      fullPath: '/ui'
      preLoaderRoute: typeof UiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wallet/useWallets': {
      id: '/wallet/useWallets'
      path: '/useWallets'
      fullPath: '/wallet/useWallets'
      preLoaderRoute: typeof WalletUseWalletsRouteImport
      parentRoute: typeof WalletRoute
    }
    '/wagmi/useDisconnect': {
      id: '/wagmi/useDisconnect'
      path: '/useDisconnect'
      fullPath: '/wagmi/useDisconnect'
      preLoaderRoute: typeof WagmiUseDisconnectRouteImport
      parentRoute: typeof WagmiRoute
    }
    '/wagmi/useBalance': {
      id: '/wagmi/useBalance'
      path: '/useBalance'
      fullPath: '/wagmi/useBalance'
      preLoaderRoute: typeof WagmiUseBalanceRouteImport
      parentRoute: typeof WagmiRoute
    }
    '/wagmi/useAccount': {
      id: '/wagmi/useAccount'
      path: '/useAccount'
      fullPath: '/wagmi/useAccount'
      preLoaderRoute: typeof WagmiUseAccountRouteImport
      parentRoute: typeof WagmiRoute
    }
    '/user/useUser': {
      id: '/user/useUser'
      path: '/useUser'
      fullPath: '/user/useUser'
      preLoaderRoute: typeof UserUseUserRouteImport
      parentRoute: typeof UserRoute
    }
    '/ui/useUI': {
      id: '/ui/useUI'
      path: '/useUI'
      fullPath: '/ui/useUI'
      preLoaderRoute: typeof UiUseUIRouteImport
      parentRoute: typeof UiRoute
    }
    '/auth/useWalletAuth': {
      id: '/auth/useWalletAuth'
      path: '/useWalletAuth'
      fullPath: '/auth/useWalletAuth'
      preLoaderRoute: typeof AuthUseWalletAuthRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/useSignOut': {
      id: '/auth/useSignOut'
      path: '/useSignOut'
      fullPath: '/auth/useSignOut'
      preLoaderRoute: typeof AuthUseSignOutRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/useOauth': {
      id: '/auth/useOauth'
      path: '/useOauth'
      fullPath: '/auth/useOauth'
      preLoaderRoute: typeof AuthUseOauthRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/useGuestAuth': {
      id: '/auth/useGuestAuth'
      path: '/useGuestAuth'
      fullPath: '/auth/useGuestAuth'
      preLoaderRoute: typeof AuthUseGuestAuthRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/useEmailAuth': {
      id: '/auth/useEmailAuth'
      path: '/useEmailAuth'
      fullPath: '/auth/useEmailAuth'
      preLoaderRoute: typeof AuthUseEmailAuthRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/useAuthCallback': {
      id: '/auth/useAuthCallback'
      path: '/useAuthCallback'
      fullPath: '/auth/useAuthCallback'
      preLoaderRoute: typeof AuthUseAuthCallbackRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthUseAuthCallbackRoute: typeof AuthUseAuthCallbackRoute
  AuthUseEmailAuthRoute: typeof AuthUseEmailAuthRoute
  AuthUseGuestAuthRoute: typeof AuthUseGuestAuthRoute
  AuthUseOauthRoute: typeof AuthUseOauthRoute
  AuthUseSignOutRoute: typeof AuthUseSignOutRoute
  AuthUseWalletAuthRoute: typeof AuthUseWalletAuthRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthUseAuthCallbackRoute: AuthUseAuthCallbackRoute,
  AuthUseEmailAuthRoute: AuthUseEmailAuthRoute,
  AuthUseGuestAuthRoute: AuthUseGuestAuthRoute,
  AuthUseOauthRoute: AuthUseOauthRoute,
  AuthUseSignOutRoute: AuthUseSignOutRoute,
  AuthUseWalletAuthRoute: AuthUseWalletAuthRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface UiRouteChildren {
  UiUseUIRoute: typeof UiUseUIRoute
}

const UiRouteChildren: UiRouteChildren = {
  UiUseUIRoute: UiUseUIRoute,
}

const UiRouteWithChildren = UiRoute._addFileChildren(UiRouteChildren)

interface UserRouteChildren {
  UserUseUserRoute: typeof UserUseUserRoute
}

const UserRouteChildren: UserRouteChildren = {
  UserUseUserRoute: UserUseUserRoute,
}

const UserRouteWithChildren = UserRoute._addFileChildren(UserRouteChildren)

interface WagmiRouteChildren {
  WagmiUseAccountRoute: typeof WagmiUseAccountRoute
  WagmiUseBalanceRoute: typeof WagmiUseBalanceRoute
  WagmiUseDisconnectRoute: typeof WagmiUseDisconnectRoute
}

const WagmiRouteChildren: WagmiRouteChildren = {
  WagmiUseAccountRoute: WagmiUseAccountRoute,
  WagmiUseBalanceRoute: WagmiUseBalanceRoute,
  WagmiUseDisconnectRoute: WagmiUseDisconnectRoute,
}

const WagmiRouteWithChildren = WagmiRoute._addFileChildren(WagmiRouteChildren)

interface WalletRouteChildren {
  WalletUseWalletsRoute: typeof WalletUseWalletsRoute
}

const WalletRouteChildren: WalletRouteChildren = {
  WalletUseWalletsRoute: WalletUseWalletsRoute,
}

const WalletRouteWithChildren =
  WalletRoute._addFileChildren(WalletRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  UiRoute: UiRouteWithChildren,
  UserRoute: UserRouteWithChildren,
  WagmiRoute: WagmiRouteWithChildren,
  WalletRoute: WalletRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
