/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WagmiRouteImport } from './routes/wagmi'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AppRouteImport } from './routes/app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthUseWalletAuthRouteImport } from './routes/auth/useWalletAuth'
import { Route as AuthUseSignOutRouteImport } from './routes/auth/useSignOut'
import { Route as AuthUseOauthRouteImport } from './routes/auth/useOauth'
import { Route as AuthUseGuestAuthRouteImport } from './routes/auth/useGuestAuth'
import { Route as AuthUseEmailAuthRouteImport } from './routes/auth/useEmailAuth'
import { Route as AuthUseAuthCallbackRouteImport } from './routes/auth/useAuthCallback'
import { Route as AppUseWalletsRouteImport } from './routes/app/useWallets'
import { Route as AppUseUserRouteImport } from './routes/app/useUser'
import { Route as AppUseUIRouteImport } from './routes/app/useUI'
import { Route as AppUseStatusRouteImport } from './routes/app/useStatus'

const WagmiRoute = WagmiRouteImport.update({
  id: '/wagmi',
  path: '/wagmi',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthUseWalletAuthRoute = AuthUseWalletAuthRouteImport.update({
  id: '/useWalletAuth',
  path: '/useWalletAuth',
  getParentRoute: () => AuthRoute,
} as any)
const AuthUseSignOutRoute = AuthUseSignOutRouteImport.update({
  id: '/useSignOut',
  path: '/useSignOut',
  getParentRoute: () => AuthRoute,
} as any)
const AuthUseOauthRoute = AuthUseOauthRouteImport.update({
  id: '/useOauth',
  path: '/useOauth',
  getParentRoute: () => AuthRoute,
} as any)
const AuthUseGuestAuthRoute = AuthUseGuestAuthRouteImport.update({
  id: '/useGuestAuth',
  path: '/useGuestAuth',
  getParentRoute: () => AuthRoute,
} as any)
const AuthUseEmailAuthRoute = AuthUseEmailAuthRouteImport.update({
  id: '/useEmailAuth',
  path: '/useEmailAuth',
  getParentRoute: () => AuthRoute,
} as any)
const AuthUseAuthCallbackRoute = AuthUseAuthCallbackRouteImport.update({
  id: '/useAuthCallback',
  path: '/useAuthCallback',
  getParentRoute: () => AuthRoute,
} as any)
const AppUseWalletsRoute = AppUseWalletsRouteImport.update({
  id: '/useWallets',
  path: '/useWallets',
  getParentRoute: () => AppRoute,
} as any)
const AppUseUserRoute = AppUseUserRouteImport.update({
  id: '/useUser',
  path: '/useUser',
  getParentRoute: () => AppRoute,
} as any)
const AppUseUIRoute = AppUseUIRouteImport.update({
  id: '/useUI',
  path: '/useUI',
  getParentRoute: () => AppRoute,
} as any)
const AppUseStatusRoute = AppUseStatusRouteImport.update({
  id: '/useStatus',
  path: '/useStatus',
  getParentRoute: () => AppRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/wagmi': typeof WagmiRoute
  '/app/useStatus': typeof AppUseStatusRoute
  '/app/useUI': typeof AppUseUIRoute
  '/app/useUser': typeof AppUseUserRoute
  '/app/useWallets': typeof AppUseWalletsRoute
  '/auth/useAuthCallback': typeof AuthUseAuthCallbackRoute
  '/auth/useEmailAuth': typeof AuthUseEmailAuthRoute
  '/auth/useGuestAuth': typeof AuthUseGuestAuthRoute
  '/auth/useOauth': typeof AuthUseOauthRoute
  '/auth/useSignOut': typeof AuthUseSignOutRoute
  '/auth/useWalletAuth': typeof AuthUseWalletAuthRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/wagmi': typeof WagmiRoute
  '/app/useStatus': typeof AppUseStatusRoute
  '/app/useUI': typeof AppUseUIRoute
  '/app/useUser': typeof AppUseUserRoute
  '/app/useWallets': typeof AppUseWalletsRoute
  '/auth/useAuthCallback': typeof AuthUseAuthCallbackRoute
  '/auth/useEmailAuth': typeof AuthUseEmailAuthRoute
  '/auth/useGuestAuth': typeof AuthUseGuestAuthRoute
  '/auth/useOauth': typeof AuthUseOauthRoute
  '/auth/useSignOut': typeof AuthUseSignOutRoute
  '/auth/useWalletAuth': typeof AuthUseWalletAuthRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/wagmi': typeof WagmiRoute
  '/app/useStatus': typeof AppUseStatusRoute
  '/app/useUI': typeof AppUseUIRoute
  '/app/useUser': typeof AppUseUserRoute
  '/app/useWallets': typeof AppUseWalletsRoute
  '/auth/useAuthCallback': typeof AuthUseAuthCallbackRoute
  '/auth/useEmailAuth': typeof AuthUseEmailAuthRoute
  '/auth/useGuestAuth': typeof AuthUseGuestAuthRoute
  '/auth/useOauth': typeof AuthUseOauthRoute
  '/auth/useSignOut': typeof AuthUseSignOutRoute
  '/auth/useWalletAuth': typeof AuthUseWalletAuthRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/auth'
    | '/wagmi'
    | '/app/useStatus'
    | '/app/useUI'
    | '/app/useUser'
    | '/app/useWallets'
    | '/auth/useAuthCallback'
    | '/auth/useEmailAuth'
    | '/auth/useGuestAuth'
    | '/auth/useOauth'
    | '/auth/useSignOut'
    | '/auth/useWalletAuth'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/auth'
    | '/wagmi'
    | '/app/useStatus'
    | '/app/useUI'
    | '/app/useUser'
    | '/app/useWallets'
    | '/auth/useAuthCallback'
    | '/auth/useEmailAuth'
    | '/auth/useGuestAuth'
    | '/auth/useOauth'
    | '/auth/useSignOut'
    | '/auth/useWalletAuth'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/auth'
    | '/wagmi'
    | '/app/useStatus'
    | '/app/useUI'
    | '/app/useUser'
    | '/app/useWallets'
    | '/auth/useAuthCallback'
    | '/auth/useEmailAuth'
    | '/auth/useGuestAuth'
    | '/auth/useOauth'
    | '/auth/useSignOut'
    | '/auth/useWalletAuth'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  WagmiRoute: typeof WagmiRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/wagmi': {
      id: '/wagmi'
      path: '/wagmi'
      fullPath: '/wagmi'
      preLoaderRoute: typeof WagmiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/useWalletAuth': {
      id: '/auth/useWalletAuth'
      path: '/useWalletAuth'
      fullPath: '/auth/useWalletAuth'
      preLoaderRoute: typeof AuthUseWalletAuthRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/useSignOut': {
      id: '/auth/useSignOut'
      path: '/useSignOut'
      fullPath: '/auth/useSignOut'
      preLoaderRoute: typeof AuthUseSignOutRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/useOauth': {
      id: '/auth/useOauth'
      path: '/useOauth'
      fullPath: '/auth/useOauth'
      preLoaderRoute: typeof AuthUseOauthRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/useGuestAuth': {
      id: '/auth/useGuestAuth'
      path: '/useGuestAuth'
      fullPath: '/auth/useGuestAuth'
      preLoaderRoute: typeof AuthUseGuestAuthRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/useEmailAuth': {
      id: '/auth/useEmailAuth'
      path: '/useEmailAuth'
      fullPath: '/auth/useEmailAuth'
      preLoaderRoute: typeof AuthUseEmailAuthRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/useAuthCallback': {
      id: '/auth/useAuthCallback'
      path: '/useAuthCallback'
      fullPath: '/auth/useAuthCallback'
      preLoaderRoute: typeof AuthUseAuthCallbackRouteImport
      parentRoute: typeof AuthRoute
    }
    '/app/useWallets': {
      id: '/app/useWallets'
      path: '/useWallets'
      fullPath: '/app/useWallets'
      preLoaderRoute: typeof AppUseWalletsRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/useUser': {
      id: '/app/useUser'
      path: '/useUser'
      fullPath: '/app/useUser'
      preLoaderRoute: typeof AppUseUserRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/useUI': {
      id: '/app/useUI'
      path: '/useUI'
      fullPath: '/app/useUI'
      preLoaderRoute: typeof AppUseUIRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/useStatus': {
      id: '/app/useStatus'
      path: '/useStatus'
      fullPath: '/app/useStatus'
      preLoaderRoute: typeof AppUseStatusRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppUseStatusRoute: typeof AppUseStatusRoute
  AppUseUIRoute: typeof AppUseUIRoute
  AppUseUserRoute: typeof AppUseUserRoute
  AppUseWalletsRoute: typeof AppUseWalletsRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppUseStatusRoute: AppUseStatusRoute,
  AppUseUIRoute: AppUseUIRoute,
  AppUseUserRoute: AppUseUserRoute,
  AppUseWalletsRoute: AppUseWalletsRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthUseAuthCallbackRoute: typeof AuthUseAuthCallbackRoute
  AuthUseEmailAuthRoute: typeof AuthUseEmailAuthRoute
  AuthUseGuestAuthRoute: typeof AuthUseGuestAuthRoute
  AuthUseOauthRoute: typeof AuthUseOauthRoute
  AuthUseSignOutRoute: typeof AuthUseSignOutRoute
  AuthUseWalletAuthRoute: typeof AuthUseWalletAuthRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthUseAuthCallbackRoute: AuthUseAuthCallbackRoute,
  AuthUseEmailAuthRoute: AuthUseEmailAuthRoute,
  AuthUseGuestAuthRoute: AuthUseGuestAuthRoute,
  AuthUseOauthRoute: AuthUseOauthRoute,
  AuthUseSignOutRoute: AuthUseSignOutRoute,
  AuthUseWalletAuthRoute: AuthUseWalletAuthRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  WagmiRoute: WagmiRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
